 
package dev.voxellab;

import com.google.common.util.concurrent.AtomicDouble;
import net.kyori.adventure.text.minimessage.MiniMessage;
import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.block.BlockFace;
import org.bukkit.block.data.Directional;
import org.bukkit.damage.DamageSource;
import org.bukkit.damage.DamageType;
import org.bukkit.entity.*;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.event.entity.PotionSplashEvent;
import org.bukkit.event.entity.ProjectileHitEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerMoveEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.PotionMeta;
import org.yaml.snakeyaml.emitter.Emitter;

import java.util.HashMap;
import java.util.HashSet;
import java.util.UUID;

public class Events implements Listener {
    HashMap<UUID, Player> threwStonePlayers = new HashMap<>();
    HashMap<UUID, Double> threwStoneDamageDiscount = new HashMap<>();
    HashMap<UUID, Integer> entityDamage = new HashMap<>();

    @EventHandler
    public void PlayerMoveEvent(PlayerMoveEvent e) {
        if (e.getPlayer().getLocation().getBlock().getType() == Material.WATER) {
            e.getPlayer().getScoreboardTags().remove("dirty");
        }
    }

    @EventHandler
    public void EntityDamageEvent(EntityDamageEvent e) {
        if (!entityDamage.containsKey(e.getEntity().getUniqueId())) return;
        e.setDamage(entityDamage.get(e.getEntity().getUniqueId()));
    }

    @EventHandler
    public void PotionSplashEvent(PotionSplashEvent e) {
        if (!threwStonePlayers.containsKey(e.getEntity().getUniqueId())) return;
        if (!threwStoneDamageDiscount.containsKey(e.getEntity().getUniqueId())) return;

        Entity hit = e.getHitEntity();
        Player player = threwStonePlayers.get(e.getEntity().getUniqueId());

        e.setCancelled(true);
        if (hit != null) {
            entityDamage.put(
                    hit.getUniqueId(),
                    (int) Math.round(4 * threwStoneDamageDiscount.get(e.getEntity().getUniqueId()))
            );
            player.playSound(
                    player.getLocation(),
                    Sound.BLOCK_ANVIL_LAND,
                    1,
                    2f
            );
            player.attack(hit);
            Bukkit.getScheduler().runTaskLater(RoomsContainerManager.getInstance(),
                    () -> entityDamage.remove(hit.getUniqueId()),
                    0
            );
        }
        else if (e.getPotion().getLocation().getBlock().getType() == Material.AIR
                &&
                e.getPotion().getLocation().getBlock().getLocation().subtract(0, 1, 0).getBlock().getType().isSolid()
        ) {
            e.getPotion().getLocation().getBlock().setType(Material.STONE_BUTTON);
            e.getPotion().getLocation().getBlock().setBlockData(Material.STONE_BUTTON.createBlockData("[face=floor]"));
        }

        threwStoneDamageDiscount.remove(e.getEntity().getUniqueId());
        threwStonePlayers.remove(e.getEntity().getUniqueId());
    }

    @EventHandler
    public void PlayerInteractEvent(PlayerInteractEvent e) {
        boolean isRightClick = e.getAction().isRightClick();
        boolean isHoldingStone = e.getPlayer().getEquipment().getItemInMainHand().getType() == Material.STONE_BUTTON;
        boolean isPowering = e.getPlayer().getScoreboardTags().contains("powering");

        if (isPowering) {
            e.setCancelled(true);
            return;
        }

        if (isRightClick && isHoldingStone) {
            e.setCancelled(true);
            AtomicDouble x = new AtomicDouble(2);
            e.getPlayer().getScoreboardTags().add("powering");
            Bukkit.getScheduler().runTaskTimer(RoomsContainerManager.getInstance(), (task) -> {
                if (e.getPlayer().getEquipment().getItemInMainHand().getType() != Material.STONE_BUTTON) {
                    e.getPlayer().getScoreboardTags().remove("powering");
                    e.getPlayer().sendActionBar(MiniMessage.miniMessage().deserialize(""));
                    task.cancel();
                    return;
                }
                double current = x.addAndGet(-1/20.0);
                StringBuilder bar = new StringBuilder();
                for (int i = 0; i < current/0.05; i++) {
                    bar.append("|");
                }
                e.getPlayer().sendActionBar(
                        MiniMessage.miniMessage().deserialize(
                                "<gradient:red:gold>"+bar+"</gradient>"+
                                        "<gold>正在蓄力中</gold>"+
                                        "<gradient:gold:red>"+bar+"</gradient>"
                        )
                );
                if (current <= 0 || !e.getPlayer().isSneaking()) {
                    e.getPlayer().playSound(
                            e.getPlayer().getLocation(),
                            Sound.ENTITY_SNOWBALL_THROW,
                            1,
                            0.2f
                    );
                    e.getPlayer().getEquipment().getItemInMainHand().setAmount(
                            e.getPlayer().getEquipment().getItemInMainHand().getAmount()-1
                    );
                    task.cancel();
                    e.getPlayer().getScoreboardTags().remove("powering");
                    e.getPlayer().sendActionBar(MiniMessage.miniMessage().deserialize(""));

                    ThrownPotion potion = e.getPlayer().launchProjectile(ThrownPotion.class, e.getPlayer().getLocation().getDirection().multiply(2));
                    potion.setItem(new ItemStack(Material.STONE));
                    potion.setSilent(true);

                    potion.setVelocity(potion.getVelocity().multiply(0.75));

                    threwStonePlayers.put(potion.getUniqueId(), e.getPlayer());
                    threwStoneDamageDiscount.put(potion.getUniqueId(), (2-current)/2);
                }
            }, 0, 1);
        }

        else {
            if (e.getClickedBlock() == null) return;
            if (e.getClickedBlock().getType() != Material.STONE_BUTTON) return;
            Bukkit.getScheduler().runTaskLater(RoomsContainerManager.getInstance(), () -> {
                e.getClickedBlock().getLocation().getBlock().setType(Material.AIR);
            }, 0);

            e.getPlayer().getInventory().addItem(
                    new ItemStack(Material.STONE_BUTTON, 1)
            );

        }
    }

}
